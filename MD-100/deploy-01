{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "AzureUserName": {
      "type": "string"
    },
    "AzurePassword": {
      "type": "securestring"
    },
    "ODLID": {
      "type": "string"
    },
    "DeploymentID": {
      "type": "string"
    },
    "trainerUserName": {
      "type": "string"
    },
    "trainerUserPassword": {
      "type": "string"
    }
    },
    "variables": {
      "cloudlabsCommon": "[concat(' -AzureUserName ', parameters('AzureUserName'), ' -AzurePassword ', parameters('AzurePassword'), ' -AzureTenantID ', variables('AzureTenantID'), ' -AzureSubscriptionID ', variables('AzureSubscriptionID'), ' -ODLID ', parameters('ODLID'))]",
      "Enable-CloudLabsEmbeddedShadow": "[concat(' -vmAdminUsername ', parameters('adminUsername'), ' -trainerUserName ', parameters('trainerUserName'), ' -trainerUserPassword ', parameters('trainerUserPassword'))]",
      "AzureSubscriptionID": "[subscription().subscriptionId]",
      "AzureTenantID": "[subscription().tenantId]",
      "location": "[resourceGroup().location]",
      "rgName": "[resourceGroup().name]",
      "winvirtualMachineName": "[concat('VM-',parameters('DeploymentID'))]",
      "networkInterfaceName": "[concat(variables('winvirtualMachineName'), '-nic')]",
      "publicIpAddressName": "[concat('labvmip', uniqueString(resourceGroup().id))]",
      "networkSecurityGroupName": "nsg",
      "vmStorageAccountContainerName": "vhds",
      "virtualNetworkName": "vnet",
      "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
      "subnetRef": "[concat(variables('vnetID'),'/subnets/','subnet')]",
      "sqlAdministratorLogin": "asa.sql.admin",
      "workspaceName": "[concat('asaworkspace', parameters('deploymentId'))]",
      "adlsStorageAccountName": "[concat('asadatalake', parameters('deploymentId'))]",
      "defaultDataLakeStorageFilesystemName": "defaultfs",
      "sparkComputeName": "SparkPool01",
      "primary_region": "East US",
      "computeSubnetId": "",
      "storageBlobDataContributorRoleID": "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
      "defaultDataLakeStorageAccountUrl": "[concat('https://', variables('adlsStorageAccountName'), '.dfs.core.windows.net')]",
      "sparkAutoScaleEnabled": "true",
      "sparkMinNodeCount": "3",
      "sparkMaxNodeCount": "4",
      "sparkNodeCount": "0",
      "sparkNodeSizeFamily": "MemoryOptimized",
      "sparkNodeSize": "Small",
      "sparkAutoPauseEnabled": "true",
      "sparkAutoPauseDelayInMinutes": "15",
      "sparkVersion": "2.4"
    },
  "resources": [
    {
      "apiVersion": "2016-09-01",
      "name": "pid-e843308b-3ce2-42a2-b743-2f21b36a5e68",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "name": "[variables('winvirtualMachineName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2017-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
      ],
      "properties": {
        "osProfile": {
          "computerName": "[variables('winvirtualMachineName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVmAgent": "true"
          }
        },
        "hardwareProfile": {
          "vmSize": "Standard_B2s"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2019-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "fromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }
          },
          "dataDisks": [

          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "extensions",
          "name": "vmExtension",
          "apiVersion": "2015-06-15",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('winvirtualMachineName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.8",
            "autoUpgradeMinorVersion": "true",
            "settings": {
              "fileUris": [
                "https://experienceazure.blob.core.windows.net/templates/moc/dp-900-new/scripts/psscripts.ps1",
                "https://experienceazure.blob.core.windows.net/templates/cloudlabs-common/cloudlabs-windows-functions.ps1"
              ],
              "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -File moc/dp-900-new/scripts/psscripts.ps1', variables('cloudlabsCommon') , variables('Enable-CloudLabsEmbeddedShadow'))]"
            }
          }
        }
      ]
    },
    {
      "name": "[variables('virtualNetworkName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2018-02-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "subnet",
            "properties": {
              "addressPrefix": "10.0.0.0/24"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('networkInterfaceName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2016-09-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        }
      }
    },
    {
      "apiVersion": "2017-04-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIpAddressName')]",
      "comments": "Public IP",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Public IP"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('publicIPAddressName')]"
        }
      }
    },
    {
      "name": "[variables('networkSecurityGroupName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-rdp",
            "properties": {
              "priority": 1000,
              "protocol": "TCP",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "3389"
            }
          }
        ]
      }
    },
    {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2019-06-01",
        "name": "[variables('adlsStorageAccountName')]",
        "location": "[variables('primary_region')]",
        "dependsOn": [],
        "tags": {},
        "sku": {
          "name": "Standard_LRS"
        },
        "kind": "StorageV2",
        "properties": {
          "accessTier": "Hot",
          "supportsHttpsTrafficOnly": "true",
          "isHnsEnabled": "true",
          "largeFileSharesState": "Disabled"
        },
        "resources": [
          {
            "type": "blobServices/containers",
            "apiVersion": "2018-07-01",
            "name": "[concat('default/', variables('defaultDataLakeStorageFilesystemName'))]",
            "dependsOn": [
              "[concat('Microsoft.Storage/storageAccounts/', variables('adlsStorageAccountName'))]"
            ]
          }
        ]
      },
      {
        "type": "Microsoft.Storage/storageAccounts/blobServices",
        "apiVersion": "2019-06-01",
        "name": "[concat(variables('adlsStorageAccountName'), '/default')]",
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts', variables('adlsStorageAccountName'))]"
        ],
        "sku": {
          "name": "Standard_LRS",
          "tier": "Standard"
        },
        "properties": {
          "cors": {
            "corsRules": []
          },
          "deleteRetentionPolicy": {
            "enabled": false
          }
        }
      },
      {
        "type": "Microsoft.Storage/storageAccounts/fileServices",
        "apiVersion": "2019-06-01",
        "name": "[concat(variables('adlsStorageAccountName'), '/default')]",
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts', variables('adlsStorageAccountName'))]"
        ],
        "sku": {
          "name": "Standard_LRS",
          "tier": "Standard"
        },
        "properties": {
          "cors": {
            "corsRules": []
          }
        }
      },
      {
        "type": "Microsoft.Synapse/workspaces",
        "apiVersion": "2019-06-01-preview",
        "name": "[variables('workspaceName')]",
        "location": "[variables('primary_region')]",
        "dependsOn": [
          "[concat('Microsoft.Storage/storageAccounts/', variables('adlsStorageAccountName'), '/blobServices/default/containers/', variables('defaultDataLakeStorageFilesystemName'))]"
        ],
        "identity": {
          "type": "SystemAssigned"
        },
        "properties": {
          "defaultDataLakeStorage": {
            "accountUrl": "[variables('defaultDataLakeStorageAccountUrl')]",
            "filesystem": "[variables('defaultDataLakeStorageFilesystemName')]"
          },
          "virtualNetworkProfile": {
            "computeSubnetId": "[variables('computeSubnetId')]"
          },
          "sqlAdministratorLogin": "[variables('sqlAdministratorLogin')]"
        },
        "resources": [
          {
            "type": "firewallrules",
            "apiVersion": "2019-06-01-preview",
            "name": "allowAll",
            "location": "[variables('primary_region')]",
            "dependsOn": [
              "[concat('Microsoft.Synapse/workspaces/', variables('workspaceName'))]"
            ],
            "properties": {
              "startIpAddress": "0.0.0.0",
              "endIpAddress": "255.255.255.255"
            }
          }
        ]
      },
      {
        "type": "Microsoft.Storage/storageAccounts/blobServices/containers/providers/roleAssignments",
        "apiVersion": "2018-09-01-preview",
        "name": "[concat(variables('adlsStorageAccountName'), '/default/', variables('defaultDataLakeStorageFilesystemName'), '/Microsoft.Authorization/',  guid(concat(resourceGroup().id, '/', variables('storageBlobDataContributorRoleID'), '/', variables('workspaceName'))))]",
        "location": "[variables('primary_region')]",
        "dependsOn": [
          "[concat('Microsoft.Synapse/workspaces/', variables('workspaceName'))]"
        ],
        "properties": {
          "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('storageBlobDataContributorRoleID'))]",
          "principalId": "[reference(concat('Microsoft.Synapse/workspaces/', variables('workspaceName')), '2019-06-01-preview', 'Full').identity.principalId]",
          "principalType": "ServicePrincipal"
        }
      },
      {
        "type": "Microsoft.Authorization/roleAssignments",
        "apiVersion": "2018-09-01-preview",
        "name": "[guid(concat(resourceGroup().id, '/', variables('storageBlobDataContributorRoleID'), '/', variables('workspaceName'), '2'))]",
        "location": "[variables('primary_region')]",
        "dependsOn": [
          "[concat('Microsoft.Synapse/workspaces/', variables('workspaceName'))]"
        ],
        "properties": {
          "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('storageBlobDataContributorRoleID'))]",
          "principalId": "[reference(concat('Microsoft.Synapse/workspaces/', variables('workspaceName')), '2019-06-01-preview', 'Full').identity.principalId]",
          "principalType": "ServicePrincipal"
        }
      },
      {
        "type": "Microsoft.Synapse/workspaces/bigDataPools",
        "apiVersion": "2019-06-01-preview",
        "name": "[concat(variables('workspaceName'), '/', variables('sparkComputeName'))]",
        "location": "[variables('primary_region')]",
        "dependsOn": [
          "[concat('Microsoft.Synapse/workspaces/', variables('workspaceName'))]"
        ],
        "properties": {
          "nodeCount": "[variables('sparkNodeCount')]",
          "nodeSizeFamily": "[variables('sparkNodeSizeFamily')]",
          "nodeSize": "[variables('sparkNodeSize')]",
          "autoScale": {
            "enabled": "[variables('sparkAutoScaleEnabled')]",
            "minNodeCount": "[variables('sparkMinNodeCount')]",
            "maxNodeCount": "[variables('sparkMaxNodeCount')]"
          },
          "autoPause": {
            "enabled": "[variables('sparkAutoPauseEnabled')]",
            "delayInMinutes": "[variables('sparkAutoPauseDelayInMinutes')]"
          },
          "sparkVersion": "[variables('sparkVersion')]"
        }
      },
      {
        "apiVersion": "2015-01-01",
        "type": "Microsoft.Resources/deployments",
        "name": "UpdateSparkPool01",
        "dependsOn": [
          "[resourceId('Microsoft.Synapse/workspaces/bigDataPools', variables('workspaceName'), variables('sparkComputeName'))]"
  
        ],
        "properties": {
          "mode": "Incremental",
          "parameters": {},
          "template": {
            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {},
            "variables": {},
            "resources": [
              {
                "type": "Microsoft.Synapse/workspaces/bigDataPools",
                "apiVersion": "2019-06-01-preview",
                "name": "[concat(variables('workspaceName'), '/', variables('sparkComputeName'))]",
                "location": "[variables('primary_region')]",
                "properties": {
                  "nodeCount": "[variables('sparkNodeCount')]",
                  "nodeSizeFamily": "[variables('sparkNodeSizeFamily')]",
                  "nodeSize": "[variables('sparkNodeSize')]",
                  "autoScale": {
                    "enabled": "[variables('sparkAutoScaleEnabled')]",
                    "minNodeCount": "[variables('sparkMinNodeCount')]",
                    "maxNodeCount": "[variables('sparkMaxNodeCount')]"
                  },
                  "autoPause": {
                    "enabled": "[variables('sparkAutoPauseEnabled')]",
                    "delayInMinutes": "[variables('sparkAutoPauseDelayInMinutes')]"
                  },
                  "sparkVersion": "[variables('sparkVersion')]"
                }
              }
            ]
          }
        }
      }
  ],
    "outputs": {
      "DeploymentID": {
        "type": "string",
        "value": "[parameters('DeploymentID')]"
      },
      "VM Admin Username": {
        "type": "string",
        "value": "[parameters('adminUsername')]"
      },
      "VM Admin Password": {
        "type": "string",
        "value": "[parameters('adminPassword')]"
      },
      "Windows VM DNS Name": {
        "type": "string",
        "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIpAddressName'))).dnsSettings.fqdn]"
      }
    }
  }
